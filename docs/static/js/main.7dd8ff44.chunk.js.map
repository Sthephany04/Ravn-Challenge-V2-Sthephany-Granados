{"version":3,"sources":["client.js","graphql/getPersonsData.graphql.js","components/PersonCell.js","components/SectionHeader.js","components/Vehicles.js","components/DataCell.js","App.js","index.js"],"names":["client","ApolloClient","uri","cache","InMemoryCache","GET_PERSONS_DATA","gql","PersonCell","useQuery","loading","error","data","className","allPeople","people","map","id","name","homeworld","species","to","icon","faChevronRight","SectionHeader","titulo","Vehicles","info","length","DataCell","User","useParams","console","log","dataPerson","eyeColor","hairColor","skinColor","birthYear","vehicleConnection","faChevronLeft","vehicles","App","basename","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7dd8ff44.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client';\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'https://swapi-graphql.netlify.app/.netlify/functions/index',\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport default client;","import { gql } from '@apollo/client';\r\n\r\nconst GET_PERSONS_DATA = gql`\r\n{\r\n\tallPeople{\r\n    people{      \r\n        id\r\n        name\r\n        eyeColor\r\n        hairColor\r\n        skinColor\r\n        birthYear\r\n        homeworld{\r\n          name\r\n        }\r\n        species{\r\n          name          \r\n        }\r\n        vehicleConnection{\r\n          vehicles{\r\n            name\r\n            model\r\n          }\r\n        }\r\n      }\r\n    }\r\n}\r\n\r\n`;\r\n\r\nexport default GET_PERSONS_DATA;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons'\r\nimport GET_PERSONS_DATA from '../graphql/getPersonsData.graphql.js';\r\n\r\nconst PersonCell = () => {\r\n  const { loading, error, data } = useQuery(GET_PERSONS_DATA);\r\n  \r\n  if (loading) return <p className=\"loading\">Loading...</p>;\r\n  if (error) return <p className=\"errorData\">Failed to Load Data</p>;\r\n    \r\n  return data.allPeople.people.map(({ id, name, homeworld, species }) => (\r\n    <section key={id} >     \r\n      <div className=\"peopleStarWars\">\r\n        <div className=\"namePeople\">\r\n          <p>\r\n            {name}\r\n          </p>\r\n          <small>\r\n          {species ? species.name : 'Human'} from {homeworld.name} \r\n          </small>          \r\n        </div>\r\n        <div>\r\n          <Link to={`/data/${id}`}>\r\n            <FontAwesomeIcon className=\"iconRight\" icon={ faChevronRight }/>          \r\n          </Link>                   \r\n        </div>\r\n      </div>\r\n      <hr />\r\n    </section>\r\n  ));\r\n}\r\n\r\nexport default PersonCell","import React from 'react'\r\n\r\nconst SectionHeader = ({ titulo }) => {\r\n  return(\r\n    <div className=\"titleHeader\">\r\n      <h3>{ titulo }</h3>\r\n    </div>\r\n  )  \r\n}\r\n\r\nexport default SectionHeader","import React from 'react'\r\n\r\nconst Vehicles = ({info}) => {\r\n\r\n  if (info.length > 0) {\r\n    return info.map(({ name }) => (\r\n      <section className=\"vehiclesInformation\">      \r\n        <p>{name}</p>\r\n        <hr />\r\n      </section>\r\n    ))\r\n  } else {\r\n    return (\r\n      <section className=\"vehiclesInformation\"> \r\n        <p>Dont have vehicles</p>\r\n        <hr />\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Vehicles","import React from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport GET_PERSONS_DATA from '../graphql/getPersonsData.graphql.js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport SectionHeader from './SectionHeader';\r\nimport Vehicles from './Vehicles.js';\r\n\r\nconst DataCell = () => {\r\n\r\n  function User () {\r\n    let { id } = useParams();\r\n    console.log(id)    \r\n    return(id)\r\n  }  \r\n  \r\n  const { loading, error, data } = useQuery(GET_PERSONS_DATA);\r\n  \r\n  if (loading) return <p className=\"loading\">Loading...</p>;\r\n  if (error) return <p className=\"errorData\">Failed to Load Data</p>;  \r\n\r\n  const dataPerson = data.allPeople.people.map(({ id, name, eyeColor, hairColor, skinColor, birthYear, vehicleConnection }) => (\r\n    <section key={id}>      \r\n      {\r\n      (User() === id) ?\r\n      <>\r\n      <div className=\"headerDataCell\">\r\n        <Link to={`/`}>\r\n          <FontAwesomeIcon className=\"iconLeft\" icon={ faChevronLeft }/>          \r\n        </Link>  \r\n        <SectionHeader titulo={name} />\r\n      </div>\r\n      <div className=\"generalInformation\">\r\n        <h4>General Information</h4>\r\n        <div className=\"eyeColor\">\r\n          <p>Eye Color</p>\r\n          <p><span>{eyeColor}</span></p>          \r\n        </div>\r\n        <hr />\r\n        <div className=\"hairColor\">\r\n          <p>Hair Color</p>\r\n          <p><span>{hairColor}</span></p>          \r\n        </div>\r\n        <hr />\r\n        <div className=\"skinColor\">\r\n          <p>Skin Color</p>\r\n          <p><span>{skinColor}</span></p>          \r\n        </div>\r\n        <hr />\r\n        <div className=\"birthYear\">\r\n          <p>Birth Year</p>\r\n          <p><span>{birthYear}</span></p>          \r\n        </div>\r\n        <hr />\r\n      </div>\r\n      <div className=\"vehiclesInformation\">\r\n        <h4>Vehicles</h4>\r\n        <Vehicles info={vehicleConnection.vehicles} />\r\n      </div>\r\n      </>:\r\n      <div></div>\r\n      }          \r\n    </section>\r\n  ));\r\n\r\n  return(\r\n    <>   \r\n      {dataPerson}\r\n    </>\r\n  )  \r\n}\r\n\r\nexport default DataCell","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom'\r\nimport client from './client';\r\nimport { ApolloProvider } from '@apollo/client';\r\nimport PersonCell from './components/PersonCell';\r\nimport SectionHeader from './components/SectionHeader';\r\nimport DataCell from './components/DataCell';\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client} >      \r\n      <Router basename = \"Ravn-Challenge-V2-Sthephany-Granados\">\r\n        <Switch>\r\n          <Route path= \"/\" exact>\r\n            <SectionHeader titulo=\"People\" />        \r\n            <PersonCell />\r\n          </Route>\r\n          <Route path=\"/data/:id\" exact>           \r\n            <DataCell />\r\n          </Route>\r\n        </Switch>\r\n      </Router>      \r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(  \r\n  <App />,  \r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}